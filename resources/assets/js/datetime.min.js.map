{"version":3,"sources":["bootstrap-datepicker.js","bootstrap-datepicker.tr.min.js","bootstrap-timepicker.js"],"names":[],"mappingsnofile":"datetime.min.js","sourcesContent":["/* =========================================================\r\n * bootstrap-datepicker.js\r\n * Repo: https://github.com/eternicode/bootstrap-datepicker/\r\n * Demo: http://eternicode.github.io/bootstrap-datepicker/\r\n * Docs: http://bootstrap-datepicker.readthedocs.org/\r\n * Forked from http://www.eyecon.ro/bootstrap-datepicker\r\n * =========================================================\r\n * Started by Stefan Petre; improvements by Andrew Rowls + contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================= */\r\n\r\n(function($, undefined) {\r\n\r\n    var $window = $(window);\r\n\r\n    function UTCDate() {\r\n        return new Date(Date.UTC.apply(Date, arguments));\r\n    }\r\n\r\n    function UTCToday() {\r\n        var today = new Date();\r\n        return UTCDate(today.getFullYear(), today.getMonth(), today.getDate());\r\n    }\r\n\r\n    function alias(method) {\r\n        return function() {\r\n            return this[method].apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    var DateArray = (function() {\r\n        var extras = {\r\n            get: function(i) {\r\n                return this.slice(i)[0];\r\n            },\r\n            contains: function(d) {\r\n                // Array.indexOf is not cross-browser;\r\n                // $.inArray doesn't work with Dates\r\n                var val = d && d.valueOf();\r\n                for (var i = 0, l = this.length; i < l; i++)\r\n                    if (this[i].valueOf() === val)\r\n                        return i;\r\n                return -1;\r\n            },\r\n            remove: function(i) {\r\n                this.splice(i, 1);\r\n            },\r\n            replace: function(new_array) {\r\n                if (!new_array)\r\n                    return;\r\n                if (!$.isArray(new_array))\r\n                    new_array = [new_array];\r\n                this.clear();\r\n                this.push.apply(this, new_array);\r\n            },\r\n            clear: function() {\r\n                this.length = 0;\r\n            },\r\n            copy: function() {\r\n                var a = new DateArray();\r\n                a.replace(this);\r\n                return a;\r\n            }\r\n        };\r\n\r\n        return function() {\r\n            var a = [];\r\n            a.push.apply(a, arguments);\r\n            $.extend(a, extras);\r\n            return a;\r\n        };\r\n    })();\r\n\r\n\r\n    // Picker object\r\n\r\n    var Datepicker = function(element, options) {\r\n        this.dates = new DateArray();\r\n        this.viewDate = UTCToday();\r\n        this.focusDate = null;\r\n\r\n        this._process_options(options);\r\n\r\n        this.element = $(element);\r\n        this.isInline = false;\r\n        this.isInput = this.element.is('input');\r\n        this.component = this.element.is('.date') ? this.element.find('.add-on, .input-group-addon, .btn') : false;\r\n        this.hasInput = this.component && this.element.find('input').length;\r\n        if (this.component && this.component.length === 0)\r\n            this.component = false;\r\n\r\n        this.picker = $(DPGlobal.template);\r\n        this._buildEvents();\r\n        this._attachEvents();\r\n\r\n        if (this.isInline) {\r\n            this.picker.addClass('datepicker-inline').appendTo(this.element);\r\n        } else {\r\n            this.picker.addClass('datepicker-dropdown dropdown-menu');\r\n        }\r\n\r\n        if (this.o.rtl) {\r\n            this.picker.addClass('datepicker-rtl');\r\n        }\r\n\r\n        this.viewMode = this.o.startView;\r\n\r\n        if (this.o.calendarWeeks)\r\n            this.picker.find('tfoot th.today')\r\n                .attr('colspan', function(i, val) {\r\n                    return parseInt(val) + 1;\r\n                });\r\n\r\n        this._allow_update = false;\r\n\r\n        this.setStartDate(this._o.startDate);\r\n        this.setEndDate(this._o.endDate);\r\n        this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled);\r\n\r\n        this.fillDow();\r\n        this.fillMonths();\r\n\r\n        this._allow_update = true;\r\n\r\n        this.update();\r\n        this.showMode();\r\n\r\n        if (this.isInline) {\r\n            this.show();\r\n        }\r\n    };\r\n\r\n    Datepicker.prototype = {\r\n        constructor: Datepicker,\r\n\r\n        _process_options: function(opts) {\r\n            // Store raw options for reference\r\n            this._o = $.extend({}, this._o, opts);\r\n            // Processed options\r\n            var o = this.o = $.extend({}, this._o);\r\n\r\n            // Check if \"de-DE\" style date is available, if not language should\r\n            // fallback to 2 letter code eg \"de\"\r\n            var lang = o.language;\r\n            if (!dates[lang]) {\r\n                lang = lang.split('-')[0];\r\n                if (!dates[lang])\r\n                    lang = defaults.language;\r\n            }\r\n            o.language = lang;\r\n\r\n            switch (o.startView) {\r\n                case 2:\r\n                case 'decade':\r\n                    o.startView = 2;\r\n                    break;\r\n                case 1:\r\n                case 'year':\r\n                    o.startView = 1;\r\n                    break;\r\n                default:\r\n                    o.startView = 0;\r\n            }\r\n\r\n            switch (o.minViewMode) {\r\n                case 1:\r\n                case 'months':\r\n                    o.minViewMode = 1;\r\n                    break;\r\n                case 2:\r\n                case 'years':\r\n                    o.minViewMode = 2;\r\n                    break;\r\n                default:\r\n                    o.minViewMode = 0;\r\n            }\r\n\r\n            o.startView = Math.max(o.startView, o.minViewMode);\r\n\r\n            // true, false, or Number > 0\r\n            if (o.multidate !== true) {\r\n                o.multidate = Number(o.multidate) || false;\r\n                if (o.multidate !== false)\r\n                    o.multidate = Math.max(0, o.multidate);\r\n                else\r\n                    o.multidate = 1;\r\n            }\r\n            o.multidateSeparator = String(o.multidateSeparator);\r\n\r\n            o.weekStart %= 7;\r\n            o.weekEnd = ((o.weekStart + 6) % 7);\r\n\r\n            var format = DPGlobal.parseFormat(o.format);\r\n            if (o.startDate !== -Infinity) {\r\n                if ( !! o.startDate) {\r\n                    if (o.startDate instanceof Date)\r\n                        o.startDate = this._local_to_utc(this._zero_time(o.startDate));\r\n                    else\r\n                        o.startDate = DPGlobal.parseDate(o.startDate, format, o.language);\r\n                } else {\r\n                    o.startDate = -Infinity;\r\n                }\r\n            }\r\n            if (o.endDate !== Infinity) {\r\n                if ( !! o.endDate) {\r\n                    if (o.endDate instanceof Date)\r\n                        o.endDate = this._local_to_utc(this._zero_time(o.endDate));\r\n                    else\r\n                        o.endDate = DPGlobal.parseDate(o.endDate, format, o.language);\r\n                } else {\r\n                    o.endDate = Infinity;\r\n                }\r\n            }\r\n\r\n            o.daysOfWeekDisabled = o.daysOfWeekDisabled || [];\r\n            if (!$.isArray(o.daysOfWeekDisabled))\r\n                o.daysOfWeekDisabled = o.daysOfWeekDisabled.split(/[,\\s]*/);\r\n            o.daysOfWeekDisabled = $.map(o.daysOfWeekDisabled, function(d) {\r\n                return parseInt(d, 10);\r\n            });\r\n\r\n            var plc = String(o.orientation).toLowerCase().split(/\\s+/g),\r\n                _plc = o.orientation.toLowerCase();\r\n            plc = $.grep(plc, function(word) {\r\n                return (/^auto|left|right|top|bottom$/).test(word);\r\n            });\r\n            o.orientation = {\r\n                x: 'auto',\r\n                y: 'auto'\r\n            };\r\n            if (!_plc || _plc === 'auto')\r\n            ; // no action\r\n            else if (plc.length === 1) {\r\n                switch (plc[0]) {\r\n                    case 'top':\r\n                    case 'bottom':\r\n                        o.orientation.y = plc[0];\r\n                        break;\r\n                    case 'left':\r\n                    case 'right':\r\n                        o.orientation.x = plc[0];\r\n                        break;\r\n                }\r\n            } else {\r\n                _plc = $.grep(plc, function(word) {\r\n                    return (/^left|right$/).test(word);\r\n                });\r\n                o.orientation.x = _plc[0] || 'auto';\r\n\r\n                _plc = $.grep(plc, function(word) {\r\n                    return (/^top|bottom$/).test(word);\r\n                });\r\n                o.orientation.y = _plc[0] || 'auto';\r\n            }\r\n        },\r\n        _events: [],\r\n        _secondaryEvents: [],\r\n        _applyEvents: function(evs) {\r\n            for (var i = 0, el, ch, ev; i < evs.length; i++) {\r\n                el = evs[i][0];\r\n                if (evs[i].length === 2) {\r\n                    ch = undefined;\r\n                    ev = evs[i][1];\r\n                } else if (evs[i].length === 3) {\r\n                    ch = evs[i][1];\r\n                    ev = evs[i][2];\r\n                }\r\n                el.on(ev, ch);\r\n            }\r\n        },\r\n        _unapplyEvents: function(evs) {\r\n            for (var i = 0, el, ev, ch; i < evs.length; i++) {\r\n                el = evs[i][0];\r\n                if (evs[i].length === 2) {\r\n                    ch = undefined;\r\n                    ev = evs[i][1];\r\n                } else if (evs[i].length === 3) {\r\n                    ch = evs[i][1];\r\n                    ev = evs[i][2];\r\n                }\r\n                el.off(ev, ch);\r\n            }\r\n        },\r\n        _buildEvents: function() {\r\n            if (this.isInput) { // single input\r\n                this._events = [\r\n                    [this.element, {\r\n                        focus: $.proxy(this.show, this),\r\n                        keyup: $.proxy(function(e) {\r\n                            if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)\r\n                                this.update();\r\n                        }, this),\r\n                        keydown: $.proxy(this.keydown, this)\r\n                    }]\r\n                ];\r\n            } else if (this.component && this.hasInput) { // component: input + button\r\n                this._events = [\r\n                    // For components that are not readonly, allow keyboard nav\r\n                    [this.element.find('input'), {\r\n                        focus: $.proxy(this.show, this),\r\n                        keyup: $.proxy(function(e) {\r\n                            if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)\r\n                                this.update();\r\n                        }, this),\r\n                        keydown: $.proxy(this.keydown, this)\r\n                    }],\r\n                    [this.component, {\r\n                        click: $.proxy(this.show, this)\r\n                    }]\r\n                ];\r\n            } else if (this.element.is('div')) { // inline datepicker\r\n                this.isInline = true;\r\n            } else {\r\n                this._events = [\r\n                    [this.element, {\r\n                        click: $.proxy(this.show, this)\r\n                    }]\r\n                ];\r\n            }\r\n            this._events.push(\r\n                // Component: listen for blur on element descendants\r\n                [this.element, '*', {\r\n                    blur: $.proxy(function(e) {\r\n                        this._focused_from = e.target;\r\n                    }, this)\r\n                }],\r\n                // Input: listen for blur on element\r\n                [this.element, {\r\n                    blur: $.proxy(function(e) {\r\n                        this._focused_from = e.target;\r\n                    }, this)\r\n                }]\r\n            );\r\n\r\n            this._secondaryEvents = [\r\n                [this.picker, {\r\n                    click: $.proxy(this.click, this)\r\n                }],\r\n                [$(window), {\r\n                    resize: $.proxy(this.place, this)\r\n                }],\r\n                [$(document), {\r\n                    'mousedown touchstart': $.proxy(function(e) {\r\n                        // Clicked outside the datepicker, hide it\r\n                        if (!(\r\n                            this.element.is(e.target) ||\r\n                            this.element.find(e.target).length ||\r\n                            this.picker.is(e.target) ||\r\n                            this.picker.find(e.target).length\r\n                        )) {\r\n                            this.hide();\r\n                        }\r\n                    }, this)\r\n                }]\r\n            ];\r\n        },\r\n        _attachEvents: function() {\r\n            this._detachEvents();\r\n            this._applyEvents(this._events);\r\n        },\r\n        _detachEvents: function() {\r\n            this._unapplyEvents(this._events);\r\n        },\r\n        _attachSecondaryEvents: function() {\r\n            this._detachSecondaryEvents();\r\n            this._applyEvents(this._secondaryEvents);\r\n        },\r\n        _detachSecondaryEvents: function() {\r\n            this._unapplyEvents(this._secondaryEvents);\r\n        },\r\n        _trigger: function(event, altdate) {\r\n            var date = altdate || this.dates.get(-1),\r\n                local_date = this._utc_to_local(date);\r\n\r\n            this.element.trigger({\r\n                type: event,\r\n                date: local_date,\r\n                dates: $.map(this.dates, this._utc_to_local),\r\n                format: $.proxy(function(ix, format) {\r\n                    if (arguments.length === 0) {\r\n                        ix = this.dates.length - 1;\r\n                        format = this.o.format;\r\n                    } else if (typeof ix === 'string') {\r\n                        format = ix;\r\n                        ix = this.dates.length - 1;\r\n                    }\r\n                    format = format || this.o.format;\r\n                    var date = this.dates.get(ix);\r\n                    return DPGlobal.formatDate(date, format, this.o.language);\r\n                }, this)\r\n            });\r\n        },\r\n\r\n        show: function() {\r\n            if (!this.isInline)\r\n                this.picker.appendTo('body');\r\n            this.picker.show();\r\n            this.place();\r\n            this._attachSecondaryEvents();\r\n            this._trigger('show');\r\n        },\r\n\r\n        hide: function() {\r\n            if (this.isInline)\r\n                return;\r\n            if (!this.picker.is(':visible'))\r\n                return;\r\n            this.focusDate = null;\r\n            this.picker.hide().detach();\r\n            this._detachSecondaryEvents();\r\n            this.viewMode = this.o.startView;\r\n            this.showMode();\r\n\r\n            if (\r\n                this.o.forceParse &&\r\n                (\r\n                    this.isInput && this.element.val() ||\r\n                    this.hasInput && this.element.find('input').val()\r\n                )\r\n            )\r\n                this.setValue();\r\n            this._trigger('hide');\r\n        },\r\n\r\n        remove: function() {\r\n            this.hide();\r\n            this._detachEvents();\r\n            this._detachSecondaryEvents();\r\n            this.picker.remove();\r\n            delete this.element.data().datepicker;\r\n            if (!this.isInput) {\r\n                delete this.element.data().date;\r\n            }\r\n        },\r\n\r\n        _utc_to_local: function(utc) {\r\n            return utc && new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));\r\n        },\r\n        _local_to_utc: function(local) {\r\n            return local && new Date(local.getTime() - (local.getTimezoneOffset() * 60000));\r\n        },\r\n        _zero_time: function(local) {\r\n            return local && new Date(local.getFullYear(), local.getMonth(), local.getDate());\r\n        },\r\n        _zero_utc_time: function(utc) {\r\n            return utc && new Date(Date.UTC(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate()));\r\n        },\r\n\r\n        getDates: function() {\r\n            return $.map(this.dates, this._utc_to_local);\r\n        },\r\n\r\n        getUTCDates: function() {\r\n            return $.map(this.dates, function(d) {\r\n                return new Date(d);\r\n            });\r\n        },\r\n\r\n        getDate: function() {\r\n            return this._utc_to_local(this.getUTCDate());\r\n        },\r\n\r\n        getUTCDate: function() {\r\n            return new Date(this.dates.get(-1));\r\n        },\r\n\r\n        setDates: function() {\r\n            var args = $.isArray(arguments[0]) ? arguments[0] : arguments;\r\n            this.update.apply(this, args);\r\n            this._trigger('changeDate');\r\n            this.setValue();\r\n        },\r\n\r\n        setUTCDates: function() {\r\n            var args = $.isArray(arguments[0]) ? arguments[0] : arguments;\r\n            this.update.apply(this, $.map(args, this._utc_to_local));\r\n            this._trigger('changeDate');\r\n            this.setValue();\r\n        },\r\n\r\n        setDate: alias('setDates'),\r\n        setUTCDate: alias('setUTCDates'),\r\n\r\n        setValue: function() {\r\n            var formatted = this.getFormattedDate();\r\n            if (!this.isInput) {\r\n                if (this.component) {\r\n                    this.element.find('input').val(formatted).change();\r\n                }\r\n            } else {\r\n                this.element.val(formatted).change();\r\n            }\r\n        },\r\n\r\n        getFormattedDate: function(format) {\r\n            if (format === undefined)\r\n                format = this.o.format;\r\n\r\n            var lang = this.o.language;\r\n            return $.map(this.dates, function(d) {\r\n                return DPGlobal.formatDate(d, format, lang);\r\n            }).join(this.o.multidateSeparator);\r\n        },\r\n\r\n        setStartDate: function(startDate) {\r\n            this._process_options({\r\n                startDate: startDate\r\n            });\r\n            this.update();\r\n            this.updateNavArrows();\r\n        },\r\n\r\n        setEndDate: function(endDate) {\r\n            this._process_options({\r\n                endDate: endDate\r\n            });\r\n            this.update();\r\n            this.updateNavArrows();\r\n        },\r\n\r\n        setDaysOfWeekDisabled: function(daysOfWeekDisabled) {\r\n            this._process_options({\r\n                daysOfWeekDisabled: daysOfWeekDisabled\r\n            });\r\n            this.update();\r\n            this.updateNavArrows();\r\n        },\r\n\r\n        place: function() {\r\n            if (this.isInline)\r\n                return;\r\n            var calendarWidth = this.picker.outerWidth(),\r\n                calendarHeight = this.picker.outerHeight(),\r\n                visualPadding = 10,\r\n                windowWidth = $window.width(),\r\n                windowHeight = $window.height(),\r\n                scrollTop = $window.scrollTop();\r\n\r\n            var zIndex = parseInt(this.element.parents().filter(function() {\r\n                return $(this).css('z-index') !== 'auto';\r\n            }).first().css('z-index')) + 9999;\r\n            var offset = this.component ? this.component.parent().offset() : this.element.offset();\r\n            var height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);\r\n            var width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);\r\n            var left = offset.left,\r\n                top = offset.top;\r\n\r\n            this.picker.removeClass(\r\n                'datepicker-orient-top datepicker-orient-bottom ' +\r\n                'datepicker-orient-right datepicker-orient-left'\r\n            );\r\n\r\n            if (this.o.orientation.x !== 'auto') {\r\n                this.picker.addClass('datepicker-orient-' + this.o.orientation.x);\r\n                if (this.o.orientation.x === 'right')\r\n                    left -= calendarWidth - width;\r\n            }\r\n            // auto x orientation is best-placement: if it crosses a window\r\n            // edge, fudge it sideways\r\n            else {\r\n                // Default to left\r\n                this.picker.addClass('datepicker-orient-left');\r\n                if (offset.left < 0)\r\n                    left -= offset.left - visualPadding;\r\n                else if (offset.left + calendarWidth > windowWidth)\r\n                    left = windowWidth - calendarWidth - visualPadding;\r\n            }\r\n\r\n            // auto y orientation is best-situation: top or bottom, no fudging,\r\n            // decision based on which shows more of the calendar\r\n            var yorient = this.o.orientation.y,\r\n                top_overflow, bottom_overflow;\r\n            if (yorient === 'auto') {\r\n                top_overflow = -scrollTop + offset.top - calendarHeight;\r\n                bottom_overflow = scrollTop + windowHeight - (offset.top + height + calendarHeight);\r\n                if (Math.max(top_overflow, bottom_overflow) === bottom_overflow)\r\n                    yorient = 'top';\r\n                else\r\n                    yorient = 'bottom';\r\n            }\r\n            this.picker.addClass('datepicker-orient-' + yorient);\r\n            if (yorient === 'top')\r\n                top += height;\r\n            else\r\n                top -= calendarHeight + parseInt(this.picker.css('padding-top'));\r\n\r\n            this.picker.css({\r\n                top: top,\r\n                left: left,\r\n                zIndex: zIndex\r\n            });\r\n        },\r\n\r\n        _allow_update: true,\r\n        update: function() {\r\n            if (!this._allow_update)\r\n                return;\r\n\r\n            var oldDates = this.dates.copy(),\r\n                dates = [],\r\n                fromArgs = false;\r\n            if (arguments.length) {\r\n                $.each(arguments, $.proxy(function(i, date) {\r\n                    if (date instanceof Date)\r\n                        date = this._local_to_utc(date);\r\n                    dates.push(date);\r\n                }, this));\r\n                fromArgs = true;\r\n            } else {\r\n                dates = this.isInput ? this.element.val() : this.element.data('date') || this.element.find('input').val();\r\n                if (dates && this.o.multidate)\r\n                    dates = dates.split(this.o.multidateSeparator);\r\n                else\r\n                    dates = [dates];\r\n                delete this.element.data().date;\r\n            }\r\n\r\n            dates = $.map(dates, $.proxy(function(date) {\r\n                return DPGlobal.parseDate(date, this.o.format, this.o.language);\r\n            }, this));\r\n            dates = $.grep(dates, $.proxy(function(date) {\r\n                return (\r\n                    date < this.o.startDate ||\r\n                    date > this.o.endDate || !date\r\n                );\r\n            }, this), true);\r\n            this.dates.replace(dates);\r\n\r\n            if (this.dates.length)\r\n                this.viewDate = new Date(this.dates.get(-1));\r\n            else if (this.viewDate < this.o.startDate)\r\n                this.viewDate = new Date(this.o.startDate);\r\n            else if (this.viewDate > this.o.endDate)\r\n                this.viewDate = new Date(this.o.endDate);\r\n\r\n            if (fromArgs) {\r\n                // setting date by clicking\r\n                this.setValue();\r\n            } else if (dates.length) {\r\n                // setting date by typing\r\n                if (String(oldDates) !== String(this.dates))\r\n                    this._trigger('changeDate');\r\n            }\r\n            if (!this.dates.length && oldDates.length)\r\n                this._trigger('clearDate');\r\n\r\n            this.fill();\r\n        },\r\n\r\n        fillDow: function() {\r\n            var dowCnt = this.o.weekStart,\r\n                html = '<tr>';\r\n            if (this.o.calendarWeeks) {\r\n                var cell = '<th class=\"cw\">&nbsp;</th>';\r\n                html += cell;\r\n                this.picker.find('.datepicker-days thead tr:first-child').prepend(cell);\r\n            }\r\n            while (dowCnt < this.o.weekStart + 7) {\r\n                html += '<th class=\"dow\">' + dates[this.o.language].daysMin[(dowCnt++) % 7] + '</th>';\r\n            }\r\n            html += '</tr>';\r\n            this.picker.find('.datepicker-days thead').append(html);\r\n        },\r\n\r\n        fillMonths: function() {\r\n            var html = '',\r\n                i = 0;\r\n            while (i < 12) {\r\n                html += '<span class=\"month\">' + dates[this.o.language].monthsShort[i++] + '</span>';\r\n            }\r\n            this.picker.find('.datepicker-months td').html(html);\r\n        },\r\n\r\n        setRange: function(range) {\r\n            if (!range || !range.length)\r\n                delete this.range;\r\n            else\r\n                this.range = $.map(range, function(d) {\r\n                    return d.valueOf();\r\n                });\r\n            this.fill();\r\n        },\r\n\r\n        getClassNames: function(date) {\r\n            var cls = [],\r\n                year = this.viewDate.getUTCFullYear(),\r\n                month = this.viewDate.getUTCMonth(),\r\n                today = new Date();\r\n            if (date.getUTCFullYear() < year || (date.getUTCFullYear() === year && date.getUTCMonth() < month)) {\r\n                cls.push('old');\r\n            } else if (date.getUTCFullYear() > year || (date.getUTCFullYear() === year && date.getUTCMonth() > month)) {\r\n                cls.push('new');\r\n            }\r\n            if (this.focusDate && date.valueOf() === this.focusDate.valueOf())\r\n                cls.push('focused');\r\n            // Compare internal UTC date with local today, not UTC today\r\n            if (this.o.todayHighlight &&\r\n                date.getUTCFullYear() === today.getFullYear() &&\r\n                date.getUTCMonth() === today.getMonth() &&\r\n                date.getUTCDate() === today.getDate()) {\r\n                cls.push('today');\r\n            }\r\n            if (this.dates.contains(date) !== -1)\r\n                cls.push('active');\r\n            if (date.valueOf() < this.o.startDate || date.valueOf() > this.o.endDate ||\r\n                $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1) {\r\n                cls.push('disabled');\r\n            }\r\n            if (this.range) {\r\n                if (date > this.range[0] && date < this.range[this.range.length - 1]) {\r\n                    cls.push('range');\r\n                }\r\n                if ($.inArray(date.valueOf(), this.range) !== -1) {\r\n                    cls.push('selected');\r\n                }\r\n            }\r\n            return cls;\r\n        },\r\n\r\n        fill: function() {\r\n            var d = new Date(this.viewDate),\r\n                year = d.getUTCFullYear(),\r\n                month = d.getUTCMonth(),\r\n                startYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,\r\n                startMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,\r\n                endYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,\r\n                endMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,\r\n                todaytxt = dates[this.o.language].today || dates['en'].today || '',\r\n                cleartxt = dates[this.o.language].clear || dates['en'].clear || '',\r\n                tooltip;\r\n            this.picker.find('.datepicker-days thead th.datepicker-switch')\r\n                .text(dates[this.o.language].months[month] + ' ' + year);\r\n            this.picker.find('tfoot th.today')\r\n                .text(todaytxt)\r\n                .toggle(this.o.todayBtn !== false);\r\n            this.picker.find('tfoot th.clear')\r\n                .text(cleartxt)\r\n                .toggle(this.o.clearBtn !== false);\r\n            this.updateNavArrows();\r\n            this.fillMonths();\r\n            var prevMonth = UTCDate(year, month - 1, 28),\r\n                day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());\r\n            prevMonth.setUTCDate(day);\r\n            prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7) % 7);\r\n            var nextMonth = new Date(prevMonth);\r\n            nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);\r\n            nextMonth = nextMonth.valueOf();\r\n            var html = [];\r\n            var clsName;\r\n            while (prevMonth.valueOf() < nextMonth) {\r\n                if (prevMonth.getUTCDay() === this.o.weekStart) {\r\n                    html.push('<tr>');\r\n                    if (this.o.calendarWeeks) {\r\n                        // ISO 8601: First week contains first thursday.\r\n                        // ISO also states week starts on Monday, but we can be more abstract here.\r\n                        var\r\n                        // Start of current week: based on weekstart/current date\r\n                        ws = new Date(+prevMonth + (this.o.weekStart - prevMonth.getUTCDay() - 7) % 7 * 864e5),\r\n                            // Thursday of this week\r\n                            th = new Date(Number(ws) + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),\r\n                            // First Thursday of year, year from thursday\r\n                            yth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),\r\n                            // Calendar week: ms between thursdays, div ms per day, div 7 days\r\n                            calWeek = (th - yth) / 864e5 / 7 + 1;\r\n                        html.push('<td class=\"cw\">' + calWeek + '</td>');\r\n\r\n                    }\r\n                }\r\n                clsName = this.getClassNames(prevMonth);\r\n                clsName.push('day');\r\n\r\n                if (this.o.beforeShowDay !== $.noop) {\r\n                    var before = this.o.beforeShowDay(this._utc_to_local(prevMonth));\r\n                    if (before === undefined)\r\n                        before = {};\r\n                    else if (typeof(before) === 'boolean')\r\n                        before = {\r\n                            enabled: before\r\n                        };\r\n                    else if (typeof(before) === 'string')\r\n                        before = {\r\n                            classes: before\r\n                        };\r\n                    if (before.enabled === false)\r\n                        clsName.push('disabled');\r\n                    if (before.classes)\r\n                        clsName = clsName.concat(before.classes.split(/\\s+/));\r\n                    if (before.tooltip)\r\n                        tooltip = before.tooltip;\r\n                }\r\n\r\n                clsName = $.unique(clsName);\r\n                html.push('<td class=\"' + clsName.join(' ') + '\"' + (tooltip ? ' title=\"' + tooltip + '\"' : '') + '>' + prevMonth.getUTCDate() + '</td>');\r\n                if (prevMonth.getUTCDay() === this.o.weekEnd) {\r\n                    html.push('</tr>');\r\n                }\r\n                prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);\r\n            }\r\n            this.picker.find('.datepicker-days tbody').empty().append(html.join(''));\r\n\r\n            var months = this.picker.find('.datepicker-months')\r\n                .find('th:eq(1)')\r\n                .text(year)\r\n                .end()\r\n                .find('span').removeClass('active');\r\n\r\n            $.each(this.dates, function(i, d) {\r\n                if (d.getUTCFullYear() === year)\r\n                    months.eq(d.getUTCMonth()).addClass('active');\r\n            });\r\n\r\n            if (year < startYear || year > endYear) {\r\n                months.addClass('disabled');\r\n            }\r\n            if (year === startYear) {\r\n                months.slice(0, startMonth).addClass('disabled');\r\n            }\r\n            if (year === endYear) {\r\n                months.slice(endMonth + 1).addClass('disabled');\r\n            }\r\n\r\n            html = '';\r\n            year = parseInt(year / 10, 10) * 10;\r\n            var yearCont = this.picker.find('.datepicker-years')\r\n                .find('th:eq(1)')\r\n                .text(year + '-' + (year + 9))\r\n                .end()\r\n                .find('td');\r\n            year -= 1;\r\n            var years = $.map(this.dates, function(d) {\r\n                return d.getUTCFullYear();\r\n            }),\r\n                classes;\r\n            for (var i = -1; i < 11; i++) {\r\n                classes = ['year'];\r\n                if (i === -1)\r\n                    classes.push('old');\r\n                else if (i === 10)\r\n                    classes.push('new');\r\n                if ($.inArray(year, years) !== -1)\r\n                    classes.push('active');\r\n                if (year < startYear || year > endYear)\r\n                    classes.push('disabled');\r\n                html += '<span class=\"' + classes.join(' ') + '\">' + year + '</span>';\r\n                year += 1;\r\n            }\r\n            yearCont.html(html);\r\n        },\r\n\r\n        updateNavArrows: function() {\r\n            if (!this._allow_update)\r\n                return;\r\n\r\n            var d = new Date(this.viewDate),\r\n                year = d.getUTCFullYear(),\r\n                month = d.getUTCMonth();\r\n            switch (this.viewMode) {\r\n                case 0:\r\n                    if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear() && month <= this.o.startDate.getUTCMonth()) {\r\n                        this.picker.find('.prev').css({\r\n                            visibility: 'hidden'\r\n                        });\r\n                    } else {\r\n                        this.picker.find('.prev').css({\r\n                            visibility: 'visible'\r\n                        });\r\n                    }\r\n                    if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear() && month >= this.o.endDate.getUTCMonth()) {\r\n                        this.picker.find('.next').css({\r\n                            visibility: 'hidden'\r\n                        });\r\n                    } else {\r\n                        this.picker.find('.next').css({\r\n                            visibility: 'visible'\r\n                        });\r\n                    }\r\n                    break;\r\n                case 1:\r\n                case 2:\r\n                    if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear()) {\r\n                        this.picker.find('.prev').css({\r\n                            visibility: 'hidden'\r\n                        });\r\n                    } else {\r\n                        this.picker.find('.prev').css({\r\n                            visibility: 'visible'\r\n                        });\r\n                    }\r\n                    if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear()) {\r\n                        this.picker.find('.next').css({\r\n                            visibility: 'hidden'\r\n                        });\r\n                    } else {\r\n                        this.picker.find('.next').css({\r\n                            visibility: 'visible'\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n\r\n        click: function(e) {\r\n            e.preventDefault();\r\n            var target = $(e.target).closest('span, td, th'),\r\n                year, month, day;\r\n            if (target.length === 1) {\r\n                switch (target[0].nodeName.toLowerCase()) {\r\n                    case 'th':\r\n                        switch (target[0].className) {\r\n                            case 'datepicker-switch':\r\n                                this.showMode(1);\r\n                                break;\r\n                            case 'prev':\r\n                            case 'next':\r\n                                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1);\r\n                                switch (this.viewMode) {\r\n                                    case 0:\r\n                                        this.viewDate = this.moveMonth(this.viewDate, dir);\r\n                                        this._trigger('changeMonth', this.viewDate);\r\n                                        break;\r\n                                    case 1:\r\n                                    case 2:\r\n                                        this.viewDate = this.moveYear(this.viewDate, dir);\r\n                                        if (this.viewMode === 1)\r\n                                            this._trigger('changeYear', this.viewDate);\r\n                                        break;\r\n                                }\r\n                                this.fill();\r\n                                break;\r\n                            case 'today':\r\n                                var date = new Date();\r\n                                date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\r\n\r\n                                this.showMode(-2);\r\n                                var which = this.o.todayBtn === 'linked' ? null : 'view';\r\n                                this._setDate(date, which);\r\n                                break;\r\n                            case 'clear':\r\n                                var element;\r\n                                if (this.isInput)\r\n                                    element = this.element;\r\n                                else if (this.component)\r\n                                    element = this.element.find('input');\r\n                                if (element)\r\n                                    element.val(\"\").change();\r\n                                this.update();\r\n                                this._trigger('changeDate');\r\n                                if (this.o.autoclose)\r\n                                    this.hide();\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case 'span':\r\n                        if (!target.is('.disabled')) {\r\n                            this.viewDate.setUTCDate(1);\r\n                            if (target.is('.month')) {\r\n                                day = 1;\r\n                                month = target.parent().find('span').index(target);\r\n                                year = this.viewDate.getUTCFullYear();\r\n                                this.viewDate.setUTCMonth(month);\r\n                                this._trigger('changeMonth', this.viewDate);\r\n                                if (this.o.minViewMode === 1) {\r\n                                    this._setDate(UTCDate(year, month, day));\r\n                                }\r\n                            } else {\r\n                                day = 1;\r\n                                month = 0;\r\n                                year = parseInt(target.text(), 10) || 0;\r\n                                this.viewDate.setUTCFullYear(year);\r\n                                this._trigger('changeYear', this.viewDate);\r\n                                if (this.o.minViewMode === 2) {\r\n                                    this._setDate(UTCDate(year, month, day));\r\n                                }\r\n                            }\r\n                            this.showMode(-1);\r\n                            this.fill();\r\n                        }\r\n                        break;\r\n                    case 'td':\r\n                        if (target.is('.day') && !target.is('.disabled')) {\r\n                            day = parseInt(target.text(), 10) || 1;\r\n                            year = this.viewDate.getUTCFullYear();\r\n                            month = this.viewDate.getUTCMonth();\r\n                            if (target.is('.old')) {\r\n                                if (month === 0) {\r\n                                    month = 11;\r\n                                    year -= 1;\r\n                                } else {\r\n                                    month -= 1;\r\n                                }\r\n                            } else if (target.is('.new')) {\r\n                                if (month === 11) {\r\n                                    month = 0;\r\n                                    year += 1;\r\n                                } else {\r\n                                    month += 1;\r\n                                }\r\n                            }\r\n                            this._setDate(UTCDate(year, month, day));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            if (this.picker.is(':visible') && this._focused_from) {\r\n                $(this._focused_from).focus();\r\n            }\r\n            delete this._focused_from;\r\n        },\r\n\r\n        _toggle_multidate: function(date) {\r\n            var ix = this.dates.contains(date);\r\n            if (!date) {\r\n                this.dates.clear();\r\n            } else if (ix !== -1) {\r\n                this.dates.remove(ix);\r\n            } else {\r\n                this.dates.push(date);\r\n            }\r\n            if (typeof this.o.multidate === 'number')\r\n                while (this.dates.length > this.o.multidate)\r\n                    this.dates.remove(0);\r\n        },\r\n\r\n        _setDate: function(date, which) {\r\n            if (!which || which === 'date')\r\n                this._toggle_multidate(date && new Date(date));\r\n            if (!which || which === 'view')\r\n                this.viewDate = date && new Date(date);\r\n\r\n            this.fill();\r\n            this.setValue();\r\n            this._trigger('changeDate');\r\n            var element;\r\n            if (this.isInput) {\r\n                element = this.element;\r\n            } else if (this.component) {\r\n                element = this.element.find('input');\r\n            }\r\n            if (element) {\r\n                element.change();\r\n            }\r\n            if (this.o.autoclose && (!which || which === 'date')) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        moveMonth: function(date, dir) {\r\n            if (!date)\r\n                return undefined;\r\n            if (!dir)\r\n                return date;\r\n            var new_date = new Date(date.valueOf()),\r\n                day = new_date.getUTCDate(),\r\n                month = new_date.getUTCMonth(),\r\n                mag = Math.abs(dir),\r\n                new_month, test;\r\n            dir = dir > 0 ? 1 : -1;\r\n            if (mag === 1) {\r\n                test = dir === -1\r\n                // If going back one month, make sure month is not current month\r\n                // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)\r\n                ? function() {\r\n                    return new_date.getUTCMonth() === month;\r\n                }\r\n                // If going forward one month, make sure month is as expected\r\n                // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)\r\n                : function() {\r\n                    return new_date.getUTCMonth() !== new_month;\r\n                };\r\n                new_month = month + dir;\r\n                new_date.setUTCMonth(new_month);\r\n                // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11\r\n                if (new_month < 0 || new_month > 11)\r\n                    new_month = (new_month + 12) % 12;\r\n            } else {\r\n                // For magnitudes >1, move one month at a time...\r\n                for (var i = 0; i < mag; i++)\r\n                // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...\r\n                    new_date = this.moveMonth(new_date, dir);\r\n                // ...then reset the day, keeping it in the new month\r\n                new_month = new_date.getUTCMonth();\r\n                new_date.setUTCDate(day);\r\n                test = function() {\r\n                    return new_month !== new_date.getUTCMonth();\r\n                };\r\n            }\r\n            // Common date-resetting loop -- if date is beyond end of month, make it\r\n            // end of month\r\n            while (test()) {\r\n                new_date.setUTCDate(--day);\r\n                new_date.setUTCMonth(new_month);\r\n            }\r\n            return new_date;\r\n        },\r\n\r\n        moveYear: function(date, dir) {\r\n            return this.moveMonth(date, dir * 12);\r\n        },\r\n\r\n        dateWithinRange: function(date) {\r\n            return date >= this.o.startDate && date <= this.o.endDate;\r\n        },\r\n\r\n        keydown: function(e) {\r\n            if (this.picker.is(':not(:visible)')) {\r\n                if (e.keyCode === 27) // allow escape to hide and re-show picker\r\n                    this.show();\r\n                return;\r\n            }\r\n            var dateChanged = false,\r\n                dir, newDate, newViewDate,\r\n                focusDate = this.focusDate || this.viewDate;\r\n            switch (e.keyCode) {\r\n                case 27: // escape\r\n                    if (this.focusDate) {\r\n                        this.focusDate = null;\r\n                        this.viewDate = this.dates.get(-1) || this.viewDate;\r\n                        this.fill();\r\n                    } else\r\n                        this.hide();\r\n                    e.preventDefault();\r\n                    break;\r\n                case 37: // left\r\n                case 39: // right\r\n                    if (!this.o.keyboardNavigation)\r\n                        break;\r\n                    dir = e.keyCode === 37 ? -1 : 1;\r\n                    if (e.ctrlKey) {\r\n                        newDate = this.moveYear(this.dates.get(-1) || UTCToday(), dir);\r\n                        newViewDate = this.moveYear(focusDate, dir);\r\n                        this._trigger('changeYear', this.viewDate);\r\n                    } else if (e.shiftKey) {\r\n                        newDate = this.moveMonth(this.dates.get(-1) || UTCToday(), dir);\r\n                        newViewDate = this.moveMonth(focusDate, dir);\r\n                        this._trigger('changeMonth', this.viewDate);\r\n                    } else {\r\n                        newDate = new Date(this.dates.get(-1) || UTCToday());\r\n                        newDate.setUTCDate(newDate.getUTCDate() + dir);\r\n                        newViewDate = new Date(focusDate);\r\n                        newViewDate.setUTCDate(focusDate.getUTCDate() + dir);\r\n                    }\r\n                    if (this.dateWithinRange(newDate)) {\r\n                        this.focusDate = this.viewDate = newViewDate;\r\n                        this.setValue();\r\n                        this.fill();\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n                case 38: // up\r\n                case 40: // down\r\n                    if (!this.o.keyboardNavigation)\r\n                        break;\r\n                    dir = e.keyCode === 38 ? -1 : 1;\r\n                    if (e.ctrlKey) {\r\n                        newDate = this.moveYear(this.dates.get(-1) || UTCToday(), dir);\r\n                        newViewDate = this.moveYear(focusDate, dir);\r\n                        this._trigger('changeYear', this.viewDate);\r\n                    } else if (e.shiftKey) {\r\n                        newDate = this.moveMonth(this.dates.get(-1) || UTCToday(), dir);\r\n                        newViewDate = this.moveMonth(focusDate, dir);\r\n                        this._trigger('changeMonth', this.viewDate);\r\n                    } else {\r\n                        newDate = new Date(this.dates.get(-1) || UTCToday());\r\n                        newDate.setUTCDate(newDate.getUTCDate() + dir * 7);\r\n                        newViewDate = new Date(focusDate);\r\n                        newViewDate.setUTCDate(focusDate.getUTCDate() + dir * 7);\r\n                    }\r\n                    if (this.dateWithinRange(newDate)) {\r\n                        this.focusDate = this.viewDate = newViewDate;\r\n                        this.setValue();\r\n                        this.fill();\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n                case 32: // spacebar\r\n                    // Spacebar is used in manually typing dates in some formats.\r\n                    // As such, its behavior should not be hijacked.\r\n                    break;\r\n                case 13: // enter\r\n                    focusDate = this.focusDate || this.dates.get(-1) || this.viewDate;\r\n                    this._toggle_multidate(focusDate);\r\n                    dateChanged = true;\r\n                    this.focusDate = null;\r\n                    this.viewDate = this.dates.get(-1) || this.viewDate;\r\n                    this.setValue();\r\n                    this.fill();\r\n                    if (this.picker.is(':visible')) {\r\n                        e.preventDefault();\r\n                        if (this.o.autoclose)\r\n                            this.hide();\r\n                    }\r\n                    break;\r\n                case 9: // tab\r\n                    this.focusDate = null;\r\n                    this.viewDate = this.dates.get(-1) || this.viewDate;\r\n                    this.fill();\r\n                    this.hide();\r\n                    break;\r\n            }\r\n            if (dateChanged) {\r\n                if (this.dates.length)\r\n                    this._trigger('changeDate');\r\n                else\r\n                    this._trigger('clearDate');\r\n                var element;\r\n                if (this.isInput) {\r\n                    element = this.element;\r\n                } else if (this.component) {\r\n                    element = this.element.find('input');\r\n                }\r\n                if (element) {\r\n                    element.change();\r\n                }\r\n            }\r\n        },\r\n\r\n        showMode: function(dir) {\r\n            if (dir) {\r\n                this.viewMode = Math.max(this.o.minViewMode, Math.min(2, this.viewMode + dir));\r\n            }\r\n            this.picker\r\n                .find('>div')\r\n                .hide()\r\n                .filter('.datepicker-' + DPGlobal.modes[this.viewMode].clsName)\r\n                .css('display', 'block');\r\n            this.updateNavArrows();\r\n        }\r\n    };\r\n\r\n    var DateRangePicker = function(element, options) {\r\n        this.element = $(element);\r\n        this.inputs = $.map(options.inputs, function(i) {\r\n            return i.jquery ? i[0] : i;\r\n        });\r\n        delete options.inputs;\r\n\r\n        $(this.inputs)\r\n            .datepicker(options)\r\n            .bind('changeDate', $.proxy(this.dateUpdated, this));\r\n\r\n        this.pickers = $.map(this.inputs, function(i) {\r\n            return $(i).data('datepicker');\r\n        });\r\n        this.updateDates();\r\n    };\r\n    DateRangePicker.prototype = {\r\n        updateDates: function() {\r\n            this.dates = $.map(this.pickers, function(i) {\r\n                return i.getUTCDate();\r\n            });\r\n            this.updateRanges();\r\n        },\r\n        updateRanges: function() {\r\n            var range = $.map(this.dates, function(d) {\r\n                return d.valueOf();\r\n            });\r\n            $.each(this.pickers, function(i, p) {\r\n                p.setRange(range);\r\n            });\r\n        },\r\n        dateUpdated: function(e) {\r\n            // `this.updating` is a workaround for preventing infinite recursion\r\n            // between `changeDate` triggering and `setUTCDate` calling.  Until\r\n            // there is a better mechanism.\r\n            if (this.updating)\r\n                return;\r\n            this.updating = true;\r\n\r\n            var dp = $(e.target).data('datepicker'),\r\n                new_date = dp.getUTCDate(),\r\n                i = $.inArray(e.target, this.inputs),\r\n                l = this.inputs.length;\r\n            if (i === -1)\r\n                return;\r\n\r\n            $.each(this.pickers, function(i, p) {\r\n                if (!p.getUTCDate())\r\n                    p.setUTCDate(new_date);\r\n            });\r\n\r\n            if (new_date < this.dates[i]) {\r\n                // Date being moved earlier/left\r\n                while (i >= 0 && new_date < this.dates[i]) {\r\n                    this.pickers[i--].setUTCDate(new_date);\r\n                }\r\n            } else if (new_date > this.dates[i]) {\r\n                // Date being moved later/right\r\n                while (i < l && new_date > this.dates[i]) {\r\n                    this.pickers[i++].setUTCDate(new_date);\r\n                }\r\n            }\r\n            this.updateDates();\r\n\r\n            delete this.updating;\r\n        },\r\n        remove: function() {\r\n            $.map(this.pickers, function(p) {\r\n                p.remove();\r\n            });\r\n            delete this.element.data().datepicker;\r\n        }\r\n    };\r\n\r\n    function opts_from_el(el, prefix) {\r\n        // Derive options from element data-attrs\r\n        var data = $(el).data(),\r\n            out = {}, inkey,\r\n            replace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])');\r\n        prefix = new RegExp('^' + prefix.toLowerCase());\r\n\r\n        function re_lower(_, a) {\r\n            return a.toLowerCase();\r\n        }\r\n        for (var key in data)\r\n            if (prefix.test(key)) {\r\n                inkey = key.replace(replace, re_lower);\r\n                out[inkey] = data[key];\r\n            }\r\n        return out;\r\n    }\r\n\r\n    function opts_from_locale(lang) {\r\n        // Derive options from locale plugins\r\n        var out = {};\r\n        // Check if \"de-DE\" style date is available, if not language should\r\n        // fallback to 2 letter code eg \"de\"\r\n        if (!dates[lang]) {\r\n            lang = lang.split('-')[0];\r\n            if (!dates[lang])\r\n                return;\r\n        }\r\n        var d = dates[lang];\r\n        $.each(locale_opts, function(i, k) {\r\n            if (k in d)\r\n                out[k] = d[k];\r\n        });\r\n        return out;\r\n    }\r\n\r\n    var old = $.fn.datepicker;\r\n    $.fn.datepicker = function(option) {\r\n        var args = Array.apply(null, arguments);\r\n        args.shift();\r\n        var internal_return;\r\n        this.each(function() {\r\n            var $this = $(this),\r\n                data = $this.data('datepicker'),\r\n                options = typeof option === 'object' && option;\r\n            if (!data) {\r\n                var elopts = opts_from_el(this, 'date'),\r\n                    // Preliminary otions\r\n                    xopts = $.extend({}, defaults, elopts, options),\r\n                    locopts = opts_from_locale(xopts.language),\r\n                    // Options priority: js args, data-attrs, locales, defaults\r\n                    opts = $.extend({}, defaults, locopts, elopts, options);\r\n                if ($this.is('.input-daterange') || opts.inputs) {\r\n                    var ropts = {\r\n                        inputs: opts.inputs || $this.find('input[name=\"start\"], input[name=\"end\"]').toArray()\r\n                    };\r\n                    $this.data('datepicker', (data = new DateRangePicker(this, $.extend(opts, ropts))));\r\n                } else {\r\n                    $this.data('datepicker', (data = new Datepicker(this, opts)));\r\n                }\r\n            }\r\n            if (typeof option === 'string' && typeof data[option] === 'function') {\r\n                internal_return = data[option].apply(data, args);\r\n                if (internal_return !== undefined)\r\n                    return false;\r\n            }\r\n        });\r\n        if (internal_return !== undefined)\r\n            return internal_return;\r\n        else\r\n            return this;\r\n    };\r\n\r\n    var defaults = $.fn.datepicker.defaults = {\r\n        autoclose: false,\r\n        beforeShowDay: $.noop,\r\n        calendarWeeks: false,\r\n        clearBtn: false,\r\n        daysOfWeekDisabled: [],\r\n        endDate: Infinity,\r\n        forceParse: true,\r\n        format: 'mm/dd/yyyy',\r\n        keyboardNavigation: true,\r\n        language: 'en',\r\n        minViewMode: 0,\r\n        multidate: false,\r\n        multidateSeparator: ',',\r\n        orientation: \"auto\",\r\n        rtl: false,\r\n        startDate: -Infinity,\r\n        startView: 0,\r\n        todayBtn: false,\r\n        todayHighlight: false,\r\n        weekStart: 0\r\n    };\r\n    var locale_opts = $.fn.datepicker.locale_opts = [\r\n        'format',\r\n        'rtl',\r\n        'weekStart'\r\n    ];\r\n    $.fn.datepicker.Constructor = Datepicker;\r\n    var dates = $.fn.datepicker.dates = {\r\n        en: {\r\n            days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n            daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n            daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\r\n            months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n            monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n            today: \"Today\",\r\n            clear: \"Clear\"\r\n        }\r\n    };\r\n\r\n    var DPGlobal = {\r\n        modes: [{\r\n            clsName: 'days',\r\n            navFnc: 'Month',\r\n            navStep: 1\r\n        }, {\r\n            clsName: 'months',\r\n            navFnc: 'FullYear',\r\n            navStep: 1\r\n        }, {\r\n            clsName: 'years',\r\n            navFnc: 'FullYear',\r\n            navStep: 10\r\n        }],\r\n        isLeapYear: function(year) {\r\n            return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));\r\n        },\r\n        getDaysInMonth: function(year, month) {\r\n            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\r\n        },\r\n        validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,\r\n        nonpunctuation: /[^ -\\/:-@\\[\\u3400-\\u9fff-`{-~\\t\\n\\r]+/g,\r\n        parseFormat: function(format) {\r\n            // IE treats \\0 as a string end in inputs (truncating the value),\r\n            // so it's a bad format delimiter, anyway\r\n            var separators = format.replace(this.validParts, '\\0').split('\\0'),\r\n                parts = format.match(this.validParts);\r\n            if (!separators || !separators.length || !parts || parts.length === 0) {\r\n                throw new Error(\"Invalid date format.\");\r\n            }\r\n            return {\r\n                separators: separators,\r\n                parts: parts\r\n            };\r\n        },\r\n        parseDate: function(date, format, language) {\r\n            if (!date)\r\n                return undefined;\r\n            if (date instanceof Date)\r\n                return date;\r\n            if (typeof format === 'string')\r\n                format = DPGlobal.parseFormat(format);\r\n            var part_re = /([\\-+]\\d+)([dmwy])/,\r\n                parts = date.match(/([\\-+]\\d+)([dmwy])/g),\r\n                part, dir, i;\r\n            if (/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/.test(date)) {\r\n                date = new Date();\r\n                for (i = 0; i < parts.length; i++) {\r\n                    part = part_re.exec(parts[i]);\r\n                    dir = parseInt(part[1]);\r\n                    switch (part[2]) {\r\n                        case 'd':\r\n                            date.setUTCDate(date.getUTCDate() + dir);\r\n                            break;\r\n                        case 'm':\r\n                            date = Datepicker.prototype.moveMonth.call(Datepicker.prototype, date, dir);\r\n                            break;\r\n                        case 'w':\r\n                            date.setUTCDate(date.getUTCDate() + dir * 7);\r\n                            break;\r\n                        case 'y':\r\n                            date = Datepicker.prototype.moveYear.call(Datepicker.prototype, date, dir);\r\n                            break;\r\n                    }\r\n                }\r\n                return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);\r\n            }\r\n            parts = date && date.match(this.nonpunctuation) || [];\r\n            date = new Date();\r\n            var parsed = {},\r\n                setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],\r\n                setters_map = {\r\n                    yyyy: function(d, v) {\r\n                        return d.setUTCFullYear(v);\r\n                    },\r\n                    yy: function(d, v) {\r\n                        return d.setUTCFullYear(2000 + v);\r\n                    },\r\n                    m: function(d, v) {\r\n                        if (isNaN(d))\r\n                            return d;\r\n                        v -= 1;\r\n                        while (v < 0) v += 12;\r\n                        v %= 12;\r\n                        d.setUTCMonth(v);\r\n                        while (d.getUTCMonth() !== v)\r\n                            d.setUTCDate(d.getUTCDate() - 1);\r\n                        return d;\r\n                    },\r\n                    d: function(d, v) {\r\n                        return d.setUTCDate(v);\r\n                    }\r\n                },\r\n                val, filtered;\r\n            setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];\r\n            setters_map['dd'] = setters_map['d'];\r\n            date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\r\n            var fparts = format.parts.slice();\r\n            // Remove noop parts\r\n            if (parts.length !== fparts.length) {\r\n                fparts = $(fparts).filter(function(i, p) {\r\n                    return $.inArray(p, setters_order) !== -1;\r\n                }).toArray();\r\n            }\r\n            // Process remainder\r\n            function match_part() {\r\n                var m = this.slice(0, parts[i].length),\r\n                    p = parts[i].slice(0, m.length);\r\n                return m === p;\r\n            }\r\n            if (parts.length === fparts.length) {\r\n                var cnt;\r\n                for (i = 0, cnt = fparts.length; i < cnt; i++) {\r\n                    val = parseInt(parts[i], 10);\r\n                    part = fparts[i];\r\n                    if (isNaN(val)) {\r\n                        switch (part) {\r\n                            case 'MM':\r\n                                filtered = $(dates[language].months).filter(match_part);\r\n                                val = $.inArray(filtered[0], dates[language].months) + 1;\r\n                                break;\r\n                            case 'M':\r\n                                filtered = $(dates[language].monthsShort).filter(match_part);\r\n                                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;\r\n                                break;\r\n                        }\r\n                    }\r\n                    parsed[part] = val;\r\n                }\r\n                var _date, s;\r\n                for (i = 0; i < setters_order.length; i++) {\r\n                    s = setters_order[i];\r\n                    if (s in parsed && !isNaN(parsed[s])) {\r\n                        _date = new Date(date);\r\n                        setters_map[s](_date, parsed[s]);\r\n                        if (!isNaN(_date))\r\n                            date = _date;\r\n                    }\r\n                }\r\n            }\r\n            return date;\r\n        },\r\n        formatDate: function(date, format, language) {\r\n            if (!date)\r\n                return '';\r\n            if (typeof format === 'string')\r\n                format = DPGlobal.parseFormat(format);\r\n            var val = {\r\n                d: date.getUTCDate(),\r\n                D: dates[language].daysShort[date.getUTCDay()],\r\n                DD: dates[language].days[date.getUTCDay()],\r\n                m: date.getUTCMonth() + 1,\r\n                M: dates[language].monthsShort[date.getUTCMonth()],\r\n                MM: dates[language].months[date.getUTCMonth()],\r\n                yy: date.getUTCFullYear().toString().substring(2),\r\n                yyyy: date.getUTCFullYear()\r\n            };\r\n            val.dd = (val.d < 10 ? '0' : '') + val.d;\r\n            val.mm = (val.m < 10 ? '0' : '') + val.m;\r\n            date = [];\r\n            var seps = $.extend([], format.separators);\r\n            for (var i = 0, cnt = format.parts.length; i <= cnt; i++) {\r\n                if (seps.length)\r\n                    date.push(seps.shift());\r\n                date.push(val[format.parts[i]]);\r\n            }\r\n            return date.join('');\r\n        },\r\n        headTemplate: '<thead>' +\r\n            '<tr>' +\r\n            '<th class=\"prev\"></th>' +\r\n            '<th colspan=\"5\" class=\"datepicker-switch\"></th>' +\r\n            '<th class=\"next\"></th>' +\r\n            '</tr>' +\r\n            '</thead>',\r\n        contTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>',\r\n        footTemplate: '<tfoot>' +\r\n            '<tr>' +\r\n            '<th colspan=\"7\" class=\"today\"></th>' +\r\n            '</tr>' +\r\n            '<tr>' +\r\n            '<th colspan=\"7\" class=\"clear\"></th>' +\r\n            '</tr>' +\r\n            '</tfoot>'\r\n    };\r\n    DPGlobal.template = '<div class=\"datepicker\">' +\r\n        '<div class=\"datepicker-days\">' +\r\n        '<table class=\" table-condensed\">' +\r\n        DPGlobal.headTemplate +\r\n        '<tbody></tbody>' +\r\n        DPGlobal.footTemplate +\r\n        '</table>' +\r\n        '</div>' +\r\n        '<div class=\"datepicker-months\">' +\r\n        '<table class=\"table-condensed\">' +\r\n        DPGlobal.headTemplate +\r\n        DPGlobal.contTemplate +\r\n        DPGlobal.footTemplate +\r\n        '</table>' +\r\n        '</div>' +\r\n        '<div class=\"datepicker-years\">' +\r\n        '<table class=\"table-condensed\">' +\r\n        DPGlobal.headTemplate +\r\n        DPGlobal.contTemplate +\r\n        DPGlobal.footTemplate +\r\n        '</table>' +\r\n        '</div>' +\r\n        '</div>';\r\n\r\n    $.fn.datepicker.DPGlobal = DPGlobal;\r\n\r\n\r\n    /* DATEPICKER NO CONFLICT\r\n     * =================== */\r\n\r\n    $.fn.datepicker.noConflict = function() {\r\n        $.fn.datepicker = old;\r\n        return this;\r\n    };\r\n\r\n\r\n    /* DATEPICKER DATA-API\r\n     * ================== */\r\n\r\n    $(document).on(\r\n        'focus.datepicker.data-api click.datepicker.data-api',\r\n        '[data-provide=\"datepicker\"]',\r\n        function(e) {\r\n            var $this = $(this);\r\n            if ($this.data('datepicker'))\r\n                return;\r\n            e.preventDefault();\r\n            // component click requires us to explicitly show it\r\n            $this.datepicker('show');\r\n        }\r\n    );\r\n    $(function() {\r\n        $('[data-provide=\"datepicker-inline\"]').datepicker();\r\n    });\r\n\r\n}(window.jQuery));","!function(a){a.fn.datepicker.dates.tr={days:[\"Pazar\",\"Pazartesi\",\"Salı\",\"Çarşamba\",\"Perşembe\",\"Cuma\",\"Cumartesi\"],daysShort:[\"Pz\",\"Pzt\",\"Sal\",\"Çrş\",\"Prş\",\"Cu\",\"Cts\"],daysMin:[\"Pz\",\"Pzt\",\"Sa\",\"Çr\",\"Pr\",\"Cu\",\"Ct\"],months:[\"Ocak\",\"Şubat\",\"Mart\",\"Nisan\",\"Mayıs\",\"Haziran\",\"Temmuz\",\"Ağustos\",\"Eylül\",\"Ekim\",\"Kasım\",\"Aralık\"],monthsShort:[\"Oca\",\"Şub\",\"Mar\",\"Nis\",\"May\",\"Haz\",\"Tem\",\"Ağu\",\"Eyl\",\"Eki\",\"Kas\",\"Ara\"],today:\"Bugün\",clear:\"Temizle\",weekStart:1,format:\"dd.mm.yyyy\"}}(jQuery);","/*!\r\n * Timepicker Component for Twitter Bootstrap\r\n *\r\n * Copyright 2013 Joris de Wit\r\n *\r\n * Contributors https://github.com/jdewit/bootstrap-timepicker/graphs/contributors\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n(function($, window, document, undefined) {\r\n    'use strict';\r\n\r\n    // TIMEPICKER PUBLIC CLASS DEFINITION\r\n    var Timepicker = function(element, options) {\r\n        this.widget = '';\r\n        this.$element = $(element);\r\n        this.defaultTime = options.defaultTime;\r\n        this.disableFocus = options.disableFocus;\r\n        this.disableMousewheel = options.disableMousewheel;\r\n        this.isOpen = options.isOpen;\r\n        this.minuteStep = options.minuteStep;\r\n        this.modalBackdrop = options.modalBackdrop;\r\n        this.orientation = options.orientation;\r\n        this.secondStep = options.secondStep;\r\n        this.showInputs = options.showInputs;\r\n        this.showMeridian = options.showMeridian;\r\n        this.showSeconds = options.showSeconds;\r\n        this.template = options.template;\r\n        this.appendWidgetTo = options.appendWidgetTo;\r\n        this.showWidgetOnAddonClick = options.showWidgetOnAddonClick;\r\n\r\n        this._init();\r\n    };\r\n\r\n    Timepicker.prototype = {\r\n\r\n        constructor: Timepicker,\r\n        _init: function() {\r\n            var self = this;\r\n\r\n            if (this.showWidgetOnAddonClick && (this.$element.parent().hasClass('input-append') || this.$element.parent().hasClass('input-prepend'))) {\r\n                this.$element.parent('.input-append, .input-prepend').find('.add-on').on({\r\n                    'click.timepicker': $.proxy(this.showWidget, this)\r\n                });\r\n                this.$element.on({\r\n                    'focus.timepicker': $.proxy(this.highlightUnit, this),\r\n                    'click.timepicker': $.proxy(this.highlightUnit, this),\r\n                    'keydown.timepicker': $.proxy(this.elementKeydown, this),\r\n                    'blur.timepicker': $.proxy(this.blurElement, this),\r\n                    'mousewheel.timepicker DOMMouseScroll.timepicker': $.proxy(this.mousewheel, this)\r\n                });\r\n            } else {\r\n                if (this.template) {\r\n                    this.$element.on({\r\n                        'focus.timepicker': $.proxy(this.showWidget, this),\r\n                        'click.timepicker': $.proxy(this.showWidget, this),\r\n                        'blur.timepicker': $.proxy(this.blurElement, this),\r\n                        'mousewheel.timepicker DOMMouseScroll.timepicker': $.proxy(this.mousewheel, this)\r\n                    });\r\n                } else {\r\n                    this.$element.on({\r\n                        'focus.timepicker': $.proxy(this.highlightUnit, this),\r\n                        'click.timepicker': $.proxy(this.highlightUnit, this),\r\n                        'keydown.timepicker': $.proxy(this.elementKeydown, this),\r\n                        'blur.timepicker': $.proxy(this.blurElement, this),\r\n                        'mousewheel.timepicker DOMMouseScroll.timepicker': $.proxy(this.mousewheel, this)\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.template !== false) {\r\n                this.$widget = $(this.getTemplate()).on('click', $.proxy(this.widgetClick, this));\r\n            } else {\r\n                this.$widget = false;\r\n            }\r\n\r\n            if (this.showInputs && this.$widget !== false) {\r\n                this.$widget.find('input').each(function() {\r\n                    $(this).on({\r\n                        'click.timepicker': function() {\r\n                            $(this).select();\r\n                        },\r\n                        'keydown.timepicker': $.proxy(self.widgetKeydown, self),\r\n                        'keyup.timepicker': $.proxy(self.widgetKeyup, self)\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.setDefaultTime(this.defaultTime);\r\n        },\r\n\r\n        blurElement: function() {\r\n            this.highlightedUnit = null;\r\n            this.updateFromElementVal();\r\n        },\r\n\r\n        clear: function() {\r\n            this.hour = '';\r\n            this.minute = '';\r\n            this.second = '';\r\n            this.meridian = '';\r\n\r\n            this.$element.val('');\r\n        },\r\n\r\n        decrementHour: function() {\r\n            if (this.showMeridian) {\r\n                if (this.hour === 1) {\r\n                    this.hour = 12;\r\n                } else if (this.hour === 12) {\r\n                    this.hour--;\r\n\r\n                    return this.toggleMeridian();\r\n                } else if (this.hour === 0) {\r\n                    this.hour = 11;\r\n\r\n                    return this.toggleMeridian();\r\n                } else {\r\n                    this.hour--;\r\n                }\r\n            } else {\r\n                if (this.hour <= 0) {\r\n                    this.hour = 23;\r\n                } else {\r\n                    this.hour--;\r\n                }\r\n            }\r\n        },\r\n\r\n        decrementMinute: function(step) {\r\n            var newVal;\r\n\r\n            if (step) {\r\n                newVal = this.minute - step;\r\n            } else {\r\n                newVal = this.minute - this.minuteStep;\r\n            }\r\n\r\n            if (newVal < 0) {\r\n                this.decrementHour();\r\n                this.minute = newVal + 60;\r\n            } else {\r\n                this.minute = newVal;\r\n            }\r\n        },\r\n\r\n        decrementSecond: function() {\r\n            var newVal = this.second - this.secondStep;\r\n\r\n            if (newVal < 0) {\r\n                this.decrementMinute(true);\r\n                this.second = newVal + 60;\r\n            } else {\r\n                this.second = newVal;\r\n            }\r\n        },\r\n\r\n        elementKeydown: function(e) {\r\n            switch (e.keyCode) {\r\n                case 9: //tab\r\n                case 27: // escape\r\n                    this.updateFromElementVal();\r\n                    break;\r\n                case 37: // left arrow\r\n                    e.preventDefault();\r\n                    this.highlightPrevUnit();\r\n                    break;\r\n                case 38: // up arrow\r\n                    e.preventDefault();\r\n                    switch (this.highlightedUnit) {\r\n                        case 'hour':\r\n                            this.incrementHour();\r\n                            this.highlightHour();\r\n                            break;\r\n                        case 'minute':\r\n                            this.incrementMinute();\r\n                            this.highlightMinute();\r\n                            break;\r\n                        case 'second':\r\n                            this.incrementSecond();\r\n                            this.highlightSecond();\r\n                            break;\r\n                        case 'meridian':\r\n                            this.toggleMeridian();\r\n                            this.highlightMeridian();\r\n                            break;\r\n                    }\r\n                    this.update();\r\n                    break;\r\n                case 39: // right arrow\r\n                    e.preventDefault();\r\n                    this.highlightNextUnit();\r\n                    break;\r\n                case 40: // down arrow\r\n                    e.preventDefault();\r\n                    switch (this.highlightedUnit) {\r\n                        case 'hour':\r\n                            this.decrementHour();\r\n                            this.highlightHour();\r\n                            break;\r\n                        case 'minute':\r\n                            this.decrementMinute();\r\n                            this.highlightMinute();\r\n                            break;\r\n                        case 'second':\r\n                            this.decrementSecond();\r\n                            this.highlightSecond();\r\n                            break;\r\n                        case 'meridian':\r\n                            this.toggleMeridian();\r\n                            this.highlightMeridian();\r\n                            break;\r\n                    }\r\n\r\n                    this.update();\r\n                    break;\r\n            }\r\n        },\r\n\r\n        getCursorPosition: function() {\r\n            var input = this.$element.get(0);\r\n\r\n            if ('selectionStart' in input) { // Standard-compliant browsers\r\n\r\n                return input.selectionStart;\r\n            } else if (document.selection) { // IE fix\r\n                input.focus();\r\n                var sel = document.selection.createRange(),\r\n                    selLen = document.selection.createRange().text.length;\r\n\r\n                sel.moveStart('character', -input.value.length);\r\n\r\n                return sel.text.length - selLen;\r\n            }\r\n        },\r\n\r\n        getTemplate: function() {\r\n            var template,\r\n                hourTemplate,\r\n                minuteTemplate,\r\n                secondTemplate,\r\n                meridianTemplate,\r\n                templateContent;\r\n\r\n            if (this.showInputs) {\r\n                hourTemplate = '<input type=\"text\" class=\"bootstrap-timepicker-hour\" maxlength=\"2\"/>';\r\n                minuteTemplate = '<input type=\"text\" class=\"bootstrap-timepicker-minute\" maxlength=\"2\"/>';\r\n                secondTemplate = '<input type=\"text\" class=\"bootstrap-timepicker-second\" maxlength=\"2\"/>';\r\n                meridianTemplate = '<input type=\"text\" class=\"bootstrap-timepicker-meridian\" maxlength=\"2\"/>';\r\n            } else {\r\n                hourTemplate = '<span class=\"bootstrap-timepicker-hour\"></span>';\r\n                minuteTemplate = '<span class=\"bootstrap-timepicker-minute\"></span>';\r\n                secondTemplate = '<span class=\"bootstrap-timepicker-second\"></span>';\r\n                meridianTemplate = '<span class=\"bootstrap-timepicker-meridian\"></span>';\r\n            }\r\n\r\n            templateContent = '<table>' +\r\n                '<tr>' +\r\n                '<td><a href=\"#\" data-action=\"incrementHour\"><i class=\"fa fa-angle-up\"></i></a></td>' +\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td><a href=\"#\" data-action=\"incrementMinute\"><i class=\"fa fa-angle-up\"></i></a></td>' +\r\n                (this.showSeconds ?\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td><a href=\"#\" data-action=\"incrementSecond\"><i class=\"fa fa-angle-up\"></i></a></td>' : '') +\r\n                (this.showMeridian ?\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td class=\"meridian-column\"><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"fa fa-angle-up\"></i></a></td>' : '') +\r\n                '</tr>' +\r\n                '<tr>' +\r\n                '<td>' + hourTemplate + '</td> ' +\r\n                '<td class=\"separator\">:</td>' +\r\n                '<td>' + minuteTemplate + '</td> ' +\r\n                (this.showSeconds ?\r\n                '<td class=\"separator\">:</td>' +\r\n                '<td>' + secondTemplate + '</td>' : '') +\r\n                (this.showMeridian ?\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td>' + meridianTemplate + '</td>' : '') +\r\n                '</tr>' +\r\n                '<tr>' +\r\n                '<td><a href=\"#\" data-action=\"decrementHour\"><i class=\"fa fa-angle-down\"></i></a></td>' +\r\n                '<td class=\"separator\"></td>' +\r\n                '<td><a href=\"#\" data-action=\"decrementMinute\"><i class=\"fa fa-angle-down\"></i></a></td>' +\r\n                (this.showSeconds ?\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td><a href=\"#\" data-action=\"decrementSecond\"><i class=\"fa fa-angle-down\"></i></a></td>' : '') +\r\n                (this.showMeridian ?\r\n                '<td class=\"separator\">&nbsp;</td>' +\r\n                '<td><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"fa fa-angle-down\"></i></a></td>' : '') +\r\n                '</tr>' +\r\n                '</table>';\r\n\r\n            switch (this.template) {\r\n                case 'modal':\r\n                    template = '<div class=\"bootstrap-timepicker-widget modal hide fade in\" data-backdrop=\"' + (this.modalBackdrop ? 'true' : 'false') + '\">' +\r\n                        '<div class=\"modal-header\">' +\r\n                        '<a href=\"#\" class=\"close\" data-dismiss=\"modal\">×</a>' +\r\n                        '<h3>Pick a Time</h3>' +\r\n                        '</div>' +\r\n                        '<div class=\"modal-content\">' +\r\n                        templateContent +\r\n                        '</div>' +\r\n                        '<div class=\"modal-footer\">' +\r\n                        '<a href=\"#\" class=\"btn btn-primary\" data-dismiss=\"modal\">OK</a>' +\r\n                        '</div>' +\r\n                        '</div>';\r\n                    break;\r\n                case 'dropdown':\r\n                    template = '<div class=\"bootstrap-timepicker-widget dropdown-menu\">' + templateContent + '</div>';\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        },\r\n\r\n        getTime: function() {\r\n            if (this.hour === '') {\r\n                return '';\r\n            }\r\n\r\n            return this.hour + ':' + (this.minute.toString().length === 1 ? '0' + this.minute : this.minute) + (this.showSeconds ? ':' + (this.second.toString().length === 1 ? '0' + this.second : this.second) : '') + (this.showMeridian ? ' ' + this.meridian : '');\r\n        },\r\n\r\n        hideWidget: function() {\r\n            if (this.isOpen === false) {\r\n                return;\r\n            }\r\n\r\n            this.$element.trigger({\r\n                'type': 'hide.timepicker',\r\n                'time': {\r\n                    'value': this.getTime(),\r\n                    'hours': this.hour,\r\n                    'minutes': this.minute,\r\n                    'seconds': this.second,\r\n                    'meridian': this.meridian\r\n                }\r\n            });\r\n\r\n            if (this.template === 'modal' && this.$widget.modal) {\r\n                this.$widget.modal('hide');\r\n            } else {\r\n                this.$widget.removeClass('open');\r\n            }\r\n\r\n            $(document).off('mousedown.timepicker, touchend.timepicker');\r\n\r\n            this.isOpen = false;\r\n            // show/hide approach taken by datepicker\r\n            this.$widget.detach();\r\n        },\r\n\r\n        highlightUnit: function() {\r\n            this.position = this.getCursorPosition();\r\n            if (this.position >= 0 && this.position <= 2) {\r\n                this.highlightHour();\r\n            } else if (this.position >= 3 && this.position <= 5) {\r\n                this.highlightMinute();\r\n            } else if (this.position >= 6 && this.position <= 8) {\r\n                if (this.showSeconds) {\r\n                    this.highlightSecond();\r\n                } else {\r\n                    this.highlightMeridian();\r\n                }\r\n            } else if (this.position >= 9 && this.position <= 11) {\r\n                this.highlightMeridian();\r\n            }\r\n        },\r\n\r\n        highlightNextUnit: function() {\r\n            switch (this.highlightedUnit) {\r\n                case 'hour':\r\n                    this.highlightMinute();\r\n                    break;\r\n                case 'minute':\r\n                    if (this.showSeconds) {\r\n                        this.highlightSecond();\r\n                    } else if (this.showMeridian) {\r\n                        this.highlightMeridian();\r\n                    } else {\r\n                        this.highlightHour();\r\n                    }\r\n                    break;\r\n                case 'second':\r\n                    if (this.showMeridian) {\r\n                        this.highlightMeridian();\r\n                    } else {\r\n                        this.highlightHour();\r\n                    }\r\n                    break;\r\n                case 'meridian':\r\n                    this.highlightHour();\r\n                    break;\r\n            }\r\n        },\r\n\r\n        highlightPrevUnit: function() {\r\n            switch (this.highlightedUnit) {\r\n                case 'hour':\r\n                    if (this.showMeridian) {\r\n                        this.highlightMeridian();\r\n                    } else if (this.showSeconds) {\r\n                        this.highlightSecond();\r\n                    } else {\r\n                        this.highlightMinute();\r\n                    }\r\n                    break;\r\n                case 'minute':\r\n                    this.highlightHour();\r\n                    break;\r\n                case 'second':\r\n                    this.highlightMinute();\r\n                    break;\r\n                case 'meridian':\r\n                    if (this.showSeconds) {\r\n                        this.highlightSecond();\r\n                    } else {\r\n                        this.highlightMinute();\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n\r\n        highlightHour: function() {\r\n            var $element = this.$element.get(0),\r\n                self = this;\r\n\r\n            this.highlightedUnit = 'hour';\r\n\r\n            if ($element.setSelectionRange) {\r\n                setTimeout(function() {\r\n                    if (self.hour < 10) {\r\n                        $element.setSelectionRange(0, 1);\r\n                    } else {\r\n                        $element.setSelectionRange(0, 2);\r\n                    }\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        highlightMinute: function() {\r\n            var $element = this.$element.get(0),\r\n                self = this;\r\n\r\n            this.highlightedUnit = 'minute';\r\n\r\n            if ($element.setSelectionRange) {\r\n                setTimeout(function() {\r\n                    if (self.hour < 10) {\r\n                        $element.setSelectionRange(2, 4);\r\n                    } else {\r\n                        $element.setSelectionRange(3, 5);\r\n                    }\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        highlightSecond: function() {\r\n            var $element = this.$element.get(0),\r\n                self = this;\r\n\r\n            this.highlightedUnit = 'second';\r\n\r\n            if ($element.setSelectionRange) {\r\n                setTimeout(function() {\r\n                    if (self.hour < 10) {\r\n                        $element.setSelectionRange(5, 7);\r\n                    } else {\r\n                        $element.setSelectionRange(6, 8);\r\n                    }\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        highlightMeridian: function() {\r\n            var $element = this.$element.get(0),\r\n                self = this;\r\n\r\n            this.highlightedUnit = 'meridian';\r\n\r\n            if ($element.setSelectionRange) {\r\n                if (this.showSeconds) {\r\n                    setTimeout(function() {\r\n                        if (self.hour < 10) {\r\n                            $element.setSelectionRange(8, 10);\r\n                        } else {\r\n                            $element.setSelectionRange(9, 11);\r\n                        }\r\n                    }, 0);\r\n                } else {\r\n                    setTimeout(function() {\r\n                        if (self.hour < 10) {\r\n                            $element.setSelectionRange(5, 7);\r\n                        } else {\r\n                            $element.setSelectionRange(6, 8);\r\n                        }\r\n                    }, 0);\r\n                }\r\n            }\r\n        },\r\n\r\n        incrementHour: function() {\r\n            if (this.showMeridian) {\r\n                if (this.hour === 11) {\r\n                    this.hour++;\r\n                    return this.toggleMeridian();\r\n                } else if (this.hour === 12) {\r\n                    this.hour = 0;\r\n                }\r\n            }\r\n            if (this.hour === 23) {\r\n                this.hour = 0;\r\n\r\n                return;\r\n            }\r\n            this.hour++;\r\n        },\r\n\r\n        incrementMinute: function(step) {\r\n            var newVal;\r\n\r\n            if (step) {\r\n                newVal = this.minute + step;\r\n            } else {\r\n                newVal = this.minute + this.minuteStep - (this.minute % this.minuteStep);\r\n            }\r\n\r\n            if (newVal > 59) {\r\n                this.incrementHour();\r\n                this.minute = newVal - 60;\r\n            } else {\r\n                this.minute = newVal;\r\n            }\r\n        },\r\n\r\n        incrementSecond: function() {\r\n            var newVal = this.second + this.secondStep - (this.second % this.secondStep);\r\n\r\n            if (newVal > 59) {\r\n                this.incrementMinute(true);\r\n                this.second = newVal - 60;\r\n            } else {\r\n                this.second = newVal;\r\n            }\r\n        },\r\n\r\n        mousewheel: function(e) {\r\n            if (this.disableMousewheel) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            var delta = e.originalEvent.wheelDelta || -e.originalEvent.detail,\r\n                scrollTo = null;\r\n\r\n            if (e.type === 'mousewheel') {\r\n                scrollTo = (e.originalEvent.wheelDelta * -1);\r\n            } else if (e.type === 'DOMMouseScroll') {\r\n                scrollTo = 40 * e.originalEvent.detail;\r\n            }\r\n\r\n            if (scrollTo) {\r\n                e.preventDefault();\r\n                $(this).scrollTop(scrollTo + $(this).scrollTop());\r\n            }\r\n\r\n            switch (this.highlightedUnit) {\r\n                case 'minute':\r\n                    if (delta > 0) {\r\n                        this.incrementMinute();\r\n                    } else {\r\n                        this.decrementMinute();\r\n                    }\r\n                    this.highlightMinute();\r\n                    break;\r\n                case 'second':\r\n                    if (delta > 0) {\r\n                        this.incrementSecond();\r\n                    } else {\r\n                        this.decrementSecond();\r\n                    }\r\n                    this.highlightSecond();\r\n                    break;\r\n                case 'meridian':\r\n                    this.toggleMeridian();\r\n                    this.highlightMeridian();\r\n                    break;\r\n                default:\r\n                    if (delta > 0) {\r\n                        this.incrementHour();\r\n                    } else {\r\n                        this.decrementHour();\r\n                    }\r\n                    this.highlightHour();\r\n                    break;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // This method was adapted from bootstrap-datepicker.\r\n        place: function() {\r\n            if (this.isInline) {\r\n                return;\r\n            }\r\n            var widgetWidth = this.$widget.outerWidth(),\r\n                widgetHeight = this.$widget.outerHeight(),\r\n                visualPadding = 10,\r\n                windowWidth =\r\n                    $(window).width(),\r\n                windowHeight = $(window).height(),\r\n                scrollTop = $(window).scrollTop();\r\n\r\n            var zIndex = parseInt(this.$element.parents().filter(function() {}).first().css('z-index'), 10) + 10;\r\n            var offset = this.component ? this.component.parent().offset() : this.$element.offset();\r\n            var height = this.component ? this.component.outerHeight(true) : this.$element.outerHeight(false);\r\n            var width = this.component ? this.component.outerWidth(true) : this.$element.outerWidth(false);\r\n            var left = offset.left,\r\n                top = offset.top;\r\n\r\n            this.$widget.removeClass('timepicker-orient-top timepicker-orient-bottom timepicker-orient-right timepicker-orient-left');\r\n\r\n            if (this.orientation.x !== 'auto') {\r\n                this.picker.addClass('datepicker-orient-' + this.orientation.x);\r\n                if (this.orientation.x === 'right') {\r\n                    left -= widgetWidth - width;\r\n                }\r\n            } else {\r\n                // auto x orientation is best-placement: if it crosses a window edge, fudge it sideways\r\n                // Default to left\r\n                this.$widget.addClass('timepicker-orient-left');\r\n                if (offset.left < 0) {\r\n                    left -= offset.left - visualPadding;\r\n                } else if (offset.left + widgetWidth > windowWidth) {\r\n                    left = windowWidth - widgetWidth - visualPadding;\r\n                }\r\n            }\r\n            // auto y orientation is best-situation: top or bottom, no fudging, decision based on which shows more of the widget\r\n            var yorient = this.orientation.y,\r\n                topOverflow, bottomOverflow;\r\n            if (yorient === 'auto') {\r\n                topOverflow = -scrollTop + offset.top - widgetHeight;\r\n                bottomOverflow = scrollTop + windowHeight - (offset.top + height + widgetHeight);\r\n                if (Math.max(topOverflow, bottomOverflow) === bottomOverflow) {\r\n                    yorient = 'top';\r\n                } else {\r\n                    yorient = 'bottom';\r\n                }\r\n            }\r\n            this.$widget.addClass('timepicker-orient-' + yorient);\r\n            if (yorient === 'top') {\r\n                top += height;\r\n            } else {\r\n                top -= widgetHeight + parseInt(this.$widget.css('padding-top'), 10);\r\n            }\r\n\r\n            this.$widget.css({\r\n                top: top,\r\n                left: left,\r\n                zIndex: zIndex\r\n            });\r\n        },\r\n\r\n        remove: function() {\r\n            $('document').off('.timepicker');\r\n            if (this.$widget) {\r\n                this.$widget.remove();\r\n            }\r\n            delete this.$element.data().timepicker;\r\n        },\r\n\r\n        setDefaultTime: function(defaultTime) {\r\n            if (!this.$element.val()) {\r\n                if (defaultTime === 'current') {\r\n                    var dTime = new Date(),\r\n                        hours = dTime.getHours(),\r\n                        minutes = dTime.getMinutes(),\r\n                        seconds = dTime.getSeconds(),\r\n                        meridian = 'AM';\r\n\r\n                    if (seconds !== 0) {\r\n                        seconds = Math.ceil(dTime.getSeconds() / this.secondStep) * this.secondStep;\r\n                        if (seconds === 60) {\r\n                            minutes += 1;\r\n                            seconds = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (minutes !== 0) {\r\n                        minutes = Math.ceil(dTime.getMinutes() / this.minuteStep) * this.minuteStep;\r\n                        if (minutes === 60) {\r\n                            hours += 1;\r\n                            minutes = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (this.showMeridian) {\r\n                        if (hours === 0) {\r\n                            hours = 12;\r\n                        } else if (hours >= 12) {\r\n                            if (hours > 12) {\r\n                                hours = hours - 12;\r\n                            }\r\n                            meridian = 'PM';\r\n                        } else {\r\n                            meridian = 'AM';\r\n                        }\r\n                    }\r\n\r\n                    this.hour = hours;\r\n                    this.minute = minutes;\r\n                    this.second = seconds;\r\n                    this.meridian = meridian;\r\n\r\n                    this.update();\r\n\r\n                } else if (defaultTime === false) {\r\n                    this.hour = 0;\r\n                    this.minute = 0;\r\n                    this.second = 0;\r\n                    this.meridian = 'AM';\r\n                } else {\r\n                    this.setTime(defaultTime);\r\n                }\r\n            } else {\r\n                this.updateFromElementVal();\r\n            }\r\n        },\r\n\r\n        setTime: function(time, ignoreWidget) {\r\n            if (!time) {\r\n                this.clear();\r\n                return;\r\n            }\r\n\r\n            var timeArray,\r\n                hour,\r\n                minute,\r\n                second,\r\n                meridian;\r\n\r\n            if (typeof time === 'object' && time.getMonth) {\r\n                // this is a date object\r\n                hour = time.getHours();\r\n                minute = time.getMinutes();\r\n                second = time.getSeconds();\r\n\r\n                if (this.showMeridian) {\r\n                    meridian = 'AM';\r\n                    if (hour > 12) {\r\n                        meridian = 'PM';\r\n                        hour = hour % 12;\r\n                    }\r\n\r\n                    if (hour === 12) {\r\n                        meridian = 'PM';\r\n                    }\r\n                }\r\n            } else {\r\n                if (time.match(/p/i) !== null) {\r\n                    meridian = 'PM';\r\n                } else {\r\n                    meridian = 'AM';\r\n                }\r\n\r\n                time = time.replace(/[^0-9\\:]/g, '');\r\n\r\n                timeArray = time.split(':');\r\n\r\n                hour = timeArray[0] ? timeArray[0].toString() : timeArray.toString();\r\n                minute = timeArray[1] ? timeArray[1].toString() : '';\r\n                second = timeArray[2] ? timeArray[2].toString() : '';\r\n\r\n                // idiot proofing\r\n                if (hour.length > 4) {\r\n                    second = hour.substr(4, 2);\r\n                }\r\n                if (hour.length > 2) {\r\n                    minute = hour.substr(2, 2);\r\n                    hour = hour.substr(0, 2);\r\n                }\r\n                if (minute.length > 2) {\r\n                    second = minute.substr(2, 2);\r\n                    minute = minute.substr(0, 2);\r\n                }\r\n                if (second.length > 2) {\r\n                    second = second.substr(2, 2);\r\n                }\r\n\r\n                hour = parseInt(hour, 10);\r\n                minute = parseInt(minute, 10);\r\n                second = parseInt(second, 10);\r\n\r\n                if (isNaN(hour)) {\r\n                    hour = 0;\r\n                }\r\n                if (isNaN(minute)) {\r\n                    minute = 0;\r\n                }\r\n                if (isNaN(second)) {\r\n                    second = 0;\r\n                }\r\n\r\n                if (this.showMeridian) {\r\n                    if (hour < 1) {\r\n                        hour = 1;\r\n                    } else if (hour > 12) {\r\n                        hour = 12;\r\n                    }\r\n                } else {\r\n                    if (hour >= 24) {\r\n                        hour = 23;\r\n                    } else if (hour < 0) {\r\n                        hour = 0;\r\n                    }\r\n                    if (hour < 13 && meridian === 'PM') {\r\n                        hour = hour + 12;\r\n                    }\r\n                }\r\n\r\n                if (minute < 0) {\r\n                    minute = 0;\r\n                } else if (minute >= 60) {\r\n                    minute = 59;\r\n                }\r\n\r\n                if (this.showSeconds) {\r\n                    if (isNaN(second)) {\r\n                        second = 0;\r\n                    } else if (second < 0) {\r\n                        second = 0;\r\n                    } else if (second >= 60) {\r\n                        second = 59;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.hour = hour;\r\n            this.minute = minute;\r\n            this.second = second;\r\n            this.meridian = meridian;\r\n\r\n            this.update(ignoreWidget);\r\n        },\r\n\r\n        showWidget: function() {\r\n            if (this.isOpen) {\r\n                return;\r\n            }\r\n\r\n            if (this.$element.is(':disabled')) {\r\n                return;\r\n            }\r\n\r\n            // show/hide approach taken by datepicker\r\n            this.$widget.appendTo(this.appendWidgetTo);\r\n            var self = this;\r\n            $(document).on('mousedown.timepicker, touchend.timepicker', function(e) {\r\n                // This condition was inspired by bootstrap-datepicker.\r\n                // The element the timepicker is invoked on is the input but it has a sibling for addon/button.\r\n                if (!(self.$element.parent().find(e.target).length ||\r\n                    self.$widget.is(e.target) ||\r\n                    self.$widget.find(e.target).length)) {\r\n                    self.hideWidget();\r\n                }\r\n            });\r\n\r\n            this.$element.trigger({\r\n                'type': 'show.timepicker',\r\n                'time': {\r\n                    'value': this.getTime(),\r\n                    'hours': this.hour,\r\n                    'minutes': this.minute,\r\n                    'seconds': this.second,\r\n                    'meridian': this.meridian\r\n                }\r\n            });\r\n\r\n            this.place();\r\n            if (this.disableFocus) {\r\n                this.$element.blur();\r\n            }\r\n\r\n            // widget shouldn't be empty on open\r\n            if (this.hour === '') {\r\n                if (this.defaultTime) {\r\n                    this.setDefaultTime(this.defaultTime);\r\n                } else {\r\n                    this.setTime('0:0:0');\r\n                }\r\n            }\r\n\r\n            if (this.template === 'modal' && this.$widget.modal) {\r\n                this.$widget.modal('show').on('hidden', $.proxy(this.hideWidget, this));\r\n            } else {\r\n                if (this.isOpen === false) {\r\n                    this.$widget.addClass('open');\r\n                }\r\n            }\r\n\r\n            this.isOpen = true;\r\n        },\r\n\r\n        toggleMeridian: function() {\r\n            this.meridian = this.meridian === 'AM' ? 'PM' : 'AM';\r\n        },\r\n\r\n        update: function(ignoreWidget) {\r\n            this.updateElement();\r\n            if (!ignoreWidget) {\r\n                this.updateWidget();\r\n            }\r\n\r\n            this.$element.trigger({\r\n                'type': 'changeTime.timepicker',\r\n                'time': {\r\n                    'value': this.getTime(),\r\n                    'hours': this.hour,\r\n                    'minutes': this.minute,\r\n                    'seconds': this.second,\r\n                    'meridian': this.meridian\r\n                }\r\n            });\r\n        },\r\n\r\n        updateElement: function() {\r\n            this.$element.val(this.getTime()).change();\r\n        },\r\n\r\n        updateFromElementVal: function() {\r\n            this.setTime(this.$element.val());\r\n        },\r\n\r\n        updateWidget: function() {\r\n            if (this.$widget === false) {\r\n                return;\r\n            }\r\n\r\n            var hour = this.hour,\r\n                minute = this.minute.toString().length === 1 ? '0' + this.minute : this.minute,\r\n                second = this.second.toString().length === 1 ? '0' + this.second : this.second;\r\n\r\n            if (this.showInputs) {\r\n                this.$widget.find('input.bootstrap-timepicker-hour').val(hour);\r\n                this.$widget.find('input.bootstrap-timepicker-minute').val(minute);\r\n\r\n                if (this.showSeconds) {\r\n                    this.$widget.find('input.bootstrap-timepicker-second').val(second);\r\n                }\r\n                if (this.showMeridian) {\r\n                    this.$widget.find('input.bootstrap-timepicker-meridian').val(this.meridian);\r\n                }\r\n            } else {\r\n                this.$widget.find('span.bootstrap-timepicker-hour').text(hour);\r\n                this.$widget.find('span.bootstrap-timepicker-minute').text(minute);\r\n\r\n                if (this.showSeconds) {\r\n                    this.$widget.find('span.bootstrap-timepicker-second').text(second);\r\n                }\r\n                if (this.showMeridian) {\r\n                    this.$widget.find('span.bootstrap-timepicker-meridian').text(this.meridian);\r\n                }\r\n            }\r\n        },\r\n\r\n        updateFromWidgetInputs: function() {\r\n            if (this.$widget === false) {\r\n                return;\r\n            }\r\n\r\n            var t = this.$widget.find('input.bootstrap-timepicker-hour').val() + ':' +\r\n                this.$widget.find('input.bootstrap-timepicker-minute').val() +\r\n                (this.showSeconds ? ':' + this.$widget.find('input.bootstrap-timepicker-second').val() : '') +\r\n                (this.showMeridian ? this.$widget.find('input.bootstrap-timepicker-meridian').val() : '');\r\n\r\n            this.setTime(t, true);\r\n        },\r\n\r\n        widgetClick: function(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            var $input = $(e.target),\r\n                action = $input.closest('a').data('action');\r\n\r\n            if (action) {\r\n                this[action]();\r\n            }\r\n            this.update();\r\n\r\n            if ($input.is('input')) {\r\n                $input.get(0).setSelectionRange(0, 2);\r\n            }\r\n        },\r\n\r\n        widgetKeydown: function(e) {\r\n            var $input = $(e.target),\r\n                name = $input.attr('class').replace('bootstrap-timepicker-', '');\r\n\r\n            switch (e.keyCode) {\r\n                case 9: //tab\r\n                    if ((this.showMeridian && name === 'meridian') || (this.showSeconds && name === 'second') || (!this.showMeridian && !this.showSeconds && name === 'minute')) {\r\n                        return this.hideWidget();\r\n                    }\r\n                    break;\r\n                case 27: // escape\r\n                    this.hideWidget();\r\n                    break;\r\n                case 38: // up arrow\r\n                    e.preventDefault();\r\n                    switch (name) {\r\n                        case 'hour':\r\n                            this.incrementHour();\r\n                            break;\r\n                        case 'minute':\r\n                            this.incrementMinute();\r\n                            break;\r\n                        case 'second':\r\n                            this.incrementSecond();\r\n                            break;\r\n                        case 'meridian':\r\n                            this.toggleMeridian();\r\n                            break;\r\n                    }\r\n                    this.setTime(this.getTime());\r\n                    $input.get(0).setSelectionRange(0, 2);\r\n                    break;\r\n                case 40: // down arrow\r\n                    e.preventDefault();\r\n                    switch (name) {\r\n                        case 'hour':\r\n                            this.decrementHour();\r\n                            break;\r\n                        case 'minute':\r\n                            this.decrementMinute();\r\n                            break;\r\n                        case 'second':\r\n                            this.decrementSecond();\r\n                            break;\r\n                        case 'meridian':\r\n                            this.toggleMeridian();\r\n                            break;\r\n                    }\r\n                    this.setTime(this.getTime());\r\n                    $input.get(0).setSelectionRange(0, 2);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        widgetKeyup: function(e) {\r\n            if ((e.keyCode === 65) || (e.keyCode === 77) || (e.keyCode === 80) || (e.keyCode === 46) || (e.keyCode === 8) || (e.keyCode >= 46 && e.keyCode <= 57)) {\r\n                this.updateFromWidgetInputs();\r\n            }\r\n        }\r\n    };\r\n\r\n    //TIMEPICKER PLUGIN DEFINITION\r\n    $.fn.timepicker = function(option) {\r\n        var args = Array.apply(null, arguments);\r\n        args.shift();\r\n        return this.each(function() {\r\n            var $this = $(this),\r\n                data = $this.data('timepicker'),\r\n                options = typeof option === 'object' && option;\r\n\r\n            if (!data) {\r\n                $this.data('timepicker', (data = new Timepicker(this, $.extend({}, $.fn.timepicker.defaults, options, $(this).data()))));\r\n            }\r\n\r\n            if (typeof option === 'string') {\r\n                data[option].apply(data, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    $.fn.timepicker.defaults = {\r\n        defaultTime: 'current',\r\n        disableFocus: false,\r\n        disableMousewheel: false,\r\n        isOpen: false,\r\n        minuteStep: 15,\r\n        modalBackdrop: false,\r\n        orientation: {\r\n            x: 'auto',\r\n            y: 'auto'\r\n        },\r\n        secondStep: 15,\r\n        showSeconds: false,\r\n        showInputs: true,\r\n        showMeridian: true,\r\n        template: 'dropdown',\r\n        appendWidgetTo: 'body',\r\n        showWidgetOnAddonClick: true\r\n    };\r\n\r\n    $.fn.timepicker.Constructor = Timepicker;\r\n\r\n})(jQuery, window, document);"]}